---
title: | 
  ![](../../.common-media/logo-unitn-ardeeno-512.png){width=10cm}

  Ardeeno WebApp

subtitle: |
  T41-SE22

  D1-Documento di Progetto

  v0.2
author: [alessandro.manfucci@studenti.unitn.it, enrico.cescato@studenti.unitn.it ,m.sottocornola-1@studenti.unitn.it]
date: "05-10-2022"
lang: it
format:
  pdf:
    include-in-header:
      text: |
        \usepackage{graphicx}
        \usepackage{wrapfig}
    documentclass: article
    classoption: titlepage
    toc: true
    toc-title: Indice
    papersize: a4
    number-sections: true
    geometry:
    - top=1in
    - bottom=1in
    - right=1in
    - left=1in
---

\pagebreak

## Abstract {.unnumbered}
Questo documento descrive ad alto livello - ed in maniera non tecnica - il sistema web da realizzare. Vengono definiti gli obiettivi e - in linguaggio naturale - i requisiti funzionali e non funzionali. Infine, viene mostrato un mock-up dell'applicazione e vengono fatte le prime considerazioni su come il sistema dovrà interagire con il BackEnd già esistente.


## Obiettivi del progetto
Il progetto ha come obiettivo lo sviluppo di una WebApp che gestisca la vendita di impianti *Internet of Things*, la loro installazione, manutenzione, riparazione e dismissione. Inoltre, l'applicazione permetterà ai clienti di visualizzare le misurazioni dei propri impianti e richiedere eventuali interventi di riparazione. Un impianto IoT è costituto da un insieme omogeneo di sensori, le cui misurazioni sono raccolte in maniera periodica ed instantanea su tutti i sensori di un impianto. Ogni misurazione comprende più parametri, che variano a seconda del tipo di impianto.

Nel dettaglio:

1. Un utente anonimo potrà visualizzare le informazioni generali relative all'azienda, le recensioni dei clienti, i tipi di impianti disponibili ed il loro costo. L'utente potrà inoltre registrarsi come cliente o autenticarsi. Un utente autenticato - cliente o dipendente dell'azienda - potrà visualizzare e modificare i propri dati personali.

2. Un cliente potrà compiere tutte le attività di visualizzazione consentite ad un utente anonimo; inoltre, potrà acquistare gli impianti resi disponibili dall'azienda, visualizzare quelli già in suo possesso - attivi o dismessi - e accedere alle misurazioni effettuate dai sensori. Avrà la possibilità di visualizzare lo stato di tutti gli interventi effettuati sui propri impianti e richiedere un intervento di riparazione per quelli ancora attivi. In aggiunta potrà recensire l'azienda.

3. Il sistema dovrà gestire i vari tipi di intervento di cui gli impianti necessitano:
  - installazione, all'acquisto dell'impianto;
  - manutenzione, annuale e solo per gli impianti attivi;
  - riparazione, su richiesta del cliente;
  - dismissione, dopo cinque anni dall'acquisto dell'impianto.  
Ogni intervento ha uno stato che evolve nel tempo: richiesto, assegnato in corso e assegnato concluso. Ogni impianto ha uno stato che evolve nel tempo: attivo, dismesso.
Un supervisore potrà quindi visualizzare le informazioni di tutti gli interventi e per gli interventi richiesti assegnare un tecnico in una certa data. 

4. Un tecnico potrà visualizzare gli interventi a lui assegnati - in corso o conclusi - con i relativi dati del cliente e dell'impianto (indirizzo, superficie, parametri misurati). Per ogni intervento assegnato in corso avrà inoltre la possibilità di rimuovere ed/o aggiungere dei sensori, distinguibili tramite codice a barre e coordinate. Potrà inoltre inserire informazioni testuali *conclusive* e segnare l'intervento come concluso. Fa eccezione la dismissione dell'impianto, in cui né si aggiungono né si rimuovono sensori. Un sensore ha uno stato che evolve nel tempo: registrato, attivo, dismesso. Un tecnico deve registrare un sensore nel sistema prima di poterlo aggiungere a un impianto.

5. Un amministratore potrà compiere tutte le azioni permesse ad un supervisore; in aggiunta potrà visualizzare le statistiche degli impianti venduti e degli interventi. Potrà inoltre registrare nuovi dipendenti e nominare dei supervisori.

## Requisiti funzionali
Questo capitolo presenta i requisiti funzionali del sistema, raggruppati per ruolo. Si noti che un utente autenticato può essere cliente o dipendente dell'azienda (inteso come tecnico, supervisore o amministratore) e può compiere tutte le attività permesse ad un utente anonimo. Inoltre, le azioni consentite ad un supervisore possono essere eseguite anche da un amministratore.

<!--
Il sistema deve consentire [ad XXX] di XXX attraverso un form [- raggiungibile da []() -] nel quale sono presenti i campi:

Il sistema - tramite la pagina mostrata da []() - deve permettere

Il sistema - attraverso la selezione effettuata in []() - deve (permettere|far visualizzare)

Il sistema - - deve far visualizzare una lista di XXX dove per ogni XXX si mostra: YYY, ZZZ; ed eventualmente KKK. Il sistema deve permettere di selezionare un XXX dalla lista. La lista deve avere ordine cronologico da data richiesta più recente a meno recente.

deve far visualizzare tutti i dati già mostrati in []() ed inoltre

- tramite la pagina mostrata da []() - 
- attraverso la selezione effettuata in []() -
- raggiungibile da []() -
-->

### Utente anonimo

#### RF1 Visualizzazione presentazione {.unnumbered}
Il sistema deve far visualizzare una pagina di presentazione, che include una breve descrizione dell'azienda, una mappa che indica la posizione della sede, ed i contatti (email e telefono).

#### RF2 Visualizzazione vetrina {.unnumbered}
Il sistema deve far visualizzare una lista dei tipi di impianto in vendita, dove per ogni tipo di impianto si mostra: nome del tipo, prezzo, immagine esemplificativa, superficie in $m^2$ consigliata e lista dei parametri misurati. Tra questi il sistema deve permettere di selezionarne uno.

#### RF3 Visualizzazione delle recensioni {.unnumbered}
Il sistema deve far visualizzare una lista delle dieci più recenti recensioni che hanno almeno tre stelle. Per ogni recensione si deve mostrare: nome dell'autore, valutazione in stelle (da 1 a 5), titolo e descrizione. Il sistema deve inoltre far visualizzare il *TrustScore* come fornito dal servizio TrustPilot.

#### RF4 Registrazione cliente {.unnumbered}
Il sistema deve consentire ad un utente anonimo di registrarsi come cliente tramite un form, nel quale sono presenti i campi: nome, cognome, email, indirizzo, contatto telefonico e password (richiesta due volte al fine di evitare errori).

#### RF5 Autenticazione{.unnumbered}
Il sistema deve permettere ad un utente anonimo di autenticarsi tramite un form, inserendo email e password.

#### RF6 Conferma email {.unnumbered}
Il sistema deve inviare alla email inserita in [RF4](#rf4-registrazione-cliente) un link per confermare tale email; la conferma dell'email avviene all'apertura del link.
L'autenticazione non è permessa se l'email non è confermata. Il link di conferma ha una scadenza di 24 ore e viene inviato nuovamente a seguito di un tentativo di accessso dalla pagina di autenticazione [RF5](#rf5-autenticazione) con email non verificata.

#### RF7 Recupero della password {.unnumbered}
Il sistema - tramite la pagina mostrata da [RF5](#rf5-autenticazione) - deve permettere a un utente anonimo di inserire l'email di autenticazione per cui cambiare password. A tale email arriverà il link della pagina in cui inserire in un form la nuova password: all'invio del form verrà cambiata la password. La password precedente non è visualizzata per motivi di sicurezza [RNF2](#rnf2-sicurezza).

### Utente Autenticato

#### RF8 Visualizzazione dei dati personali {.unnumbered}
Il sistema tramite una pagina deve consentire la visualizzazione dei dati immessi in fase di registrazione ([RF4](#rf4-registrazione-cliente) o [RF24](#rf24-registrazione-dipendenti)) sotto forma di lista. La password non è visualizzata per motivi di sicurezza [RNF2](#rnf2-sicurezza).

#### RF9 Modifica dei dati personali {.unnumbered}
Il sistema deve consentire attraverso un form - raggiungibile da [RF6](#rf6-visualizzazione-dei-dati-personali) - la modifica dei dati immessi in fase di registrazione ([RF4](#rf4-registrazione-cliente)). In tale form ogni campo sarà inizialmente vuoto e sarà possibile assegnargli un valore; una volta che il form è inviato saranno modificati solo quei campi non vuoti. La password è richiesta due volte.

### Cliente

#### RF10 Acquisto impianto {.unnumbered}
Il sistema - attraverso la selezione effettuta in [RF2](#rf2-vetrina) - deve permettere di effettuare l'acquisto del dato impianto, specificando attraverso un form indirizzo di installazione e superficie in $m^2$. All'invio del form sarà richiesto il pagamento tramite PayPal. L'acquisto è considerato concluso quando il pagamento con PayPal è concluso. Ad acquisto concluso il sistema inserisce una richiesta di installazione per l'impianto.

#### RF11 Visualizzazione impianti acquistati {.unnumbered}
Il sistema deve consentire ad un cliente di visualizzare una lista di tutti gli impianti acquistati (attivi e dismessi), dove per ogni impianto si mostra: id, superficie, indirizzo e stato (attivo o dismesso). Tra questi il sistema deve permettere di selezionarne uno.

#### RF12 Visualizzazione misurazioni su heatmap {.unnumbered}
Il sistema - attraverso la selezione effettuta in [RF8](#rf8-impianti-acquistati) - deve far visualizzare su una mappa reperita da OpenStreetMap le misurazioni dei sensori sotto forma di heatmap. La heatmap deve considerare un parametro misurato scelto attraverso una lista visibile al lato. Sono considerate solo le più recenti misurazioni presenti nella base di dati all'atto di caricamento della pagina.

#### RF13 Visualizzazione misurazioni su tabella {.unnumbered}
Il sistema deve mostrare in una tabella - raggiungibile dalla schermata [RF9](#rf9-misurazioni-su-mappa) - tutte le misurazioni effettuate dai sensori appartenenti all'impianto selezionato. Queste misurazioni devono essere elencate in ordine cronologico, da più recente a meno recente. La tabella deve contenere come colonne il *timestamp* della misurazione, l'id del sensore e successivamente una colonna per ogni parametro misurato. Per esempio, considerando un impianto dove i parametri misurati sono: temperatura, umidità, CO2, tVOC; la tabella deve avere struttura:

|ID|Timestamp|Temperatura[°C]|Umidità[%]|CO2[ppm]|tVOC[ppb]|
|---|---|---|---|---|---|

#### RF14 Visualizzazione interventi di un impianto {.unnumbered}
Il sistema deve far visualizzare una lista - raggiungibile dalla schermata [RF12](#rf12-visualizzazione-misurazioni-su-heatmap) - di tutti gli interventi dell'impianto selezionato, dove per ogni intervento si mostra: data richiesta, tipo di intervento, stato; ed eventualmente: nome e cognome del tecnico assegnato, data conclusione, informazioni conclusive.

#### RF15 Richiesta intervento di riparazione {.unnumbered}
Il sistema, se l'impianto selezionato è attivo, deve consentire ad un cliente di richiedere un intervento di riparazione attraverso un form - raggiungibile da [RF14](#rf14-visualizzazione-interventi-di-un-impianto) - nel quale è presente il campo motivazione della richiesta.

#### RF16 Richiesta recensione {.unnumbered}
Il sistema, ad acquisto concluso, - in aggiunta a quanto specificato in [RF10](#rf10-acquisto-impianto) - deve inviare un'email al cliente contenente il link per inserire una nuova recensione su TrustPilot.

### Supervisore

#### RF17 Visualizzazione lista interventi {.unnumbered}
Il sistema deve consentire ad un Supervisore di visualizzare la lista di tutti (ogni tipo e ogni stato) gli interventi, dove per ogni intervento si mostra: nome del tipo dell'impianto, id dell'impianto, data richiesta intervento, tipo di intervento, stato dell'intervento; ed eventualmente: data conclusione intervento. La lista deve avere ordine cronologico da data richiesta più recente a meno recente. Il sistema deve permettere di selezionare un intervento dalla lista.

#### RF18 Visualizzazione intervento {.unnumbered}
Il sistema - attraverso la selezione effettuata in [RF17](#rf17-visualizzazione-lista-interventi) - deve far visualizzare tutti i dati già mostrati in [RF17](#rf17-visualizzazione-lista-interventi) ed inoltre: nome, cognome e contatto telefono del cliente, indirizzo di installazione dell'impianto, superficie dell'impianto in $m^2$; ed eventualmente: nome, cognome, contatto telefonico del tecnico assegnato, data conclusione, informazioni conclusive.

#### RF19 Assegnazione intervento {.unnumbered}
Il sistema - tramite la pagina mostrata da [RF18](#rf18-visualizzazione-intervento) -, se l'intervento è nello stato **richiesto**, deve permettere di assegnare un tecnico in una data attraverso un form nel quale sono presenti i campi: data(giorno/mese/anno), lista dei tecnici (nome, cognome) senza interventi assegnati in quella data. Il sistema mostra la lista dei tecnici solo successivamente all'inserimento di una data valida (giorno corrente o successivi).

### Tecnico
#### RF20 Registrazione sensore {.unnumbered}
Il sistema deve consentire ad un tecnico di registrare un sensore attraverso un form, nel quale sono presenti i seguenti campi: id del sensore.

#### RF21 Visualizzazione lista interventi assegnati {.unnumbered}
Il sistema deve far visualizzare una lista di tutti gli interventi assegnati, dove per ogni intervento si mostra: nome tipo dell'impianto, id dell'impianto, superficie dell'impianto, indirizzo di installazione, tipo di intervento, stato dell'intervento, data richiesta intervento, nome, cognome e contatto telefonico del cliente. La lista deve avere ordine cronologico da data richiesta più recente a meno recente. Il sistema deve permettere di selezionare un intervento dalla lista.

#### RF19 Intervento Assegnato {.unnumbered}
Il sistema deve far scegliere un intervento tramite [RF18](#rf18-lista-interventi-assegnati) e deve mostrare: impianto(), cliente(), intervento(tipo, stato, data). Se si tratta di un intervento in corso il sistema deve permettere di aggiungere delle **informazioni conclusive** e concluderlo.

#### RF20 Aggiunta/Rimozione sensori {.unnumbered}
Il sistema, tramite [RF19](#rf19-intervento-assegnato), se l'intervento in corso è di tipo installazione/manutenzione/riparazione, deve permettere di rimuovere sensori (fornendo l'id) ed aggiungere sensori (fornendo id e coordinate).

### Amministratore

#### RF21 Registrazione Dipendenti {.unnumbered}
Il sistema deve permettere all'amministratore di registrare nel sistema i dipendenti, inserendo oltre ai dati descritti in [RF3](#rf3-autenticazione-.unnumbered) anche CF e ruolo (tecnico, supervisore, amministratore)

#### RF22 Lista Dipendenti {.unnumbered}
Il sistema deve mostrare una lista di tutti i dipendeti, che comprende per ogni dipendente: nome, cognome, CF, email, telefono, ruolo.

#### RF23 Modifica Dipendenti {.unnumbered}
Il sistema deve far selezionare un dipendente da [RF22](#rf22-lista-dipendenti) e deve permettere di modificare i dati più rilevanti

#### RF24 Statistiche Vendite {.unnumbered}

#### RF25 Statistiche Malfunzionamenti {.unnumbered}

## Requisiti Non Funzionali

#### RNF1 Privacy {.unnumbered}
La WebApp deve rispettare il regolamento europeo 2016/679 noto come GDPR (General Data Protection Regulation)

#### RNF2 Sicurezza {.unnumbered}
La WebApp deve utilizzare connessioni https

#### RNF3 Facilità d'uso {.unnumbered}
I dipendenti devono imparare ad usare le funzioni [RF18](), [RF19](), [RF20]() con un addestramento specifico di non più di 15 minuti.
Un utente anonimo deve essere in grado di registrarsi e portare a termine un acquisto senza alcuno addestramento, imparando in autonomia in meno di 5 minuti.

#### RNF4 Prestazioni {.unnumbered}
Le funzioni [RF18](), [RF19]() devono essere eseguite in al più 5 secondi; la funzione [RF20]() deve essere eseguita dal sistema in al più 3 secondi. La misurazione avviene da quando ogni form è stato compilato ed inviato a quando la conferma è visualizzata.

#### RNF5 Portabilità {.unnumbered}
Le funzioni [RF18](), [RF19](), [RF20]() devono funzionare:
- sui seguenti browser:
- sui seguenti sistemi operativi:

#### RNF6 Scalabilità {.unnumbered}

## Design Front-end

## Design Back-end